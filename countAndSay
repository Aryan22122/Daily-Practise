class Solution {
    public static String fn(String curr, int n) {
        String[] ans = new String[n + 1];
        ans[0] = curr;

        for (int i = 1; i <= n; i++) {
            StringBuilder deper = new StringBuilder();
            String prev = ans[i - 1];
            int count = 1;
            char currChar = prev.charAt(0);

            for (int j = 1; j < prev.length(); j++) {
                if (prev.charAt(j) == currChar) {
                    count++;
                } else {
                    deper.append(count).append(currChar);
                    currChar = prev.charAt(j);
                    count = 1;
                }
            }
                        deper.append(count).append(currChar);

            ans[i] = deper.toString();
        }

        return ans[n];
    }

    public String countAndSay(int n) {
        return fn("1", n - 1);
    }
}
